server:
  port: 8082

spring:
  application:
    name: "listingservice"
  config:
    import: "optional:configserver:http://localhost:8071/"

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.trusted.packages: "*"
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: listing-service

  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/userservicedb}
    driver-class-name: ${DB_DRIVER_CLASS_NAME:org.postgresql.Driver}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: ${JPA_HIBERNATE_DDL_AUTO:update}
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc:
          timezone: UTC
  redis:
    host: localhost
    port: 6379
  cache:
    type: redis
    redis:
      time-to-live: 30000

jwt:
  secret-key: ${JWT_SECRET_KEY:ZGlnNF4lXiYqKCo0MjRnZXdnZXdma2Vmfmg4gr25fbg15}
  signature-algorithm: HS256

minio:
  bucket: "images"
  url: "http://localhost:9000/"
  accessKey: "minioadmin"
  secretKey: "minioadmin"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  prometheus:
    metrics:
      export:
        enabled: true
  health:
    liveness-state:
      enabled: true
    readiness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:
      enabled: true

event:
  topic:
    listing:
      created: "listing-created"
      updated: "listing-updated"
      deleted: "listing-deleted"
      rating:
        updated: "listing-rating-updated"
      availability:
        request: "listing-availability-request"
        response: "listing-availability-response"
        block: "listing-availability-block"
        unblock: "listing-availability-unblock"